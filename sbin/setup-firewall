#!/bin/bash

set -e

call() {
	if ! "$@" ; then
		ret="$?"
		echo "$@" >&2
		echo "Execution failed with exit code $ret." >&2
		exit $?
	fi
}


iptx() {
	ipt4 "$@"
	ipt6 "$@"
}


ipt4() {
	call iptables "$@"
}


ipt6() {
	call ip6tables "$@"
}


cgcreate -g net_cls:fullnet
echo 0x00420001 > /sys/fs/cgroup/net_cls/fullnet/net_cls.classid
chmod 660 /sys/fs/cgroup/net_cls/fullnet/tasks
chown root:fullnet /sys/fs/cgroup/net_cls/fullnet/tasks

## watch -d -n 2 iptables  -nvL
## Nice approach: https://www.digitalocean.com/community/tutorials/how-to-list-and-delete-iptables-firewall-rules
## Can be used for home net detection: http://www.netfilter.org/documentation/HOWTO/netfilter-extensions-HOWTO-3.html#ss3.2
## cgroups: http://habrahabr.ru/post/274445/

##    22/TCPx: IO SSH
##    43/TCPx:  O Who is
##    53/TCPx:  O DNS
##    53/UDPx:  O DNS
##    67/UDP4:  O DHCP Server
##    68/UDP4: I  DHCP Client
##    80/TCPx:  O HTTP
##   123/UDPx:  O NTP
##   443/TCPx:  O HTTPS
##   465/TCPx:  O SMTPS
##   547/UDP6:  O DHCP
##   631/TCPx:  O IPP
##   873/TCPx:  O Rsync
##   993/TCPx:  O IMAPS
##  3632/TCPx: I  DistCC
##  4242/TCPx:  O Quassel Core
##  5060/UDPx: IO SIP
##  5222/TCPx:  O XMPP
##  5353/UDPx:  O Avahi
##  6454/UDPx:  O Art-Net
##  6600/TCPx:  O MPD
##  9100/TCPx:    HP JetDirect
##  9418/TCPx:  O Native GIT
## 21027/UDPx:    syncthing (broadcast)
## 22000/TCPx:    syncthing (data)
## 22067/TCPx:    syncthing (relay)
## 64738/TCPx:  O Mumble control
## 64738/UDPx:  O Mumble speach
## DHCP seems to use raw sockets, which can't be filtered


iptx -Z


## == Table: mangle
iptx -t mangle -F
iptx -t mangle -X
iptx -t mangle -P PREROUTING ACCEPT
iptx -t mangle -P INPUT ACCEPT
iptx -t mangle -P FORWARD ACCEPT
iptx -t mangle -P OUTPUT ACCEPT
iptx -t mangle -P POSTROUTING ACCEPT


## == Table: nat
ipt4 -t nat -F
ipt4 -t nat -X
ipt4 -t nat -P PREROUTING ACCEPT
ipt4 -t nat -P INPUT ACCEPT
ipt4 -t nat -P OUTPUT ACCEPT
ipt4 -t nat -P POSTROUTING ACCEPT


## == Table: filter
iptx -F
iptx -X

if [ "$1" == "stop" ] ; then
	iptx -P INPUT ACCEPT
	iptx -P FORWARD ACCEPT
	iptx -P OUTPUT ACCEPT
	echo "Stopped"
	exit 0
else
	iptx -P INPUT DROP
	iptx -P FORWARD DROP
	iptx -P OUTPUT DROP
fi


## Create new chains
iptx -N IN_LOG
iptx -N OUT_LOG

## === INPUT
## ==== Accept canonical
iptx -A INPUT -i lo -j ACCEPT
ipt4 -A INPUT -p igmp -j ACCEPT
ipt4 -A INPUT -p icmp -j ACCEPT
ipt6 -A INPUT -p ipv6-icmp -j ACCEPT

## ==== Accept special ports
## TCP (simple)
iptx -A INPUT -p tcp -m multiport --dports 22,3632 -j ACCEPT

## UDP (simple)
iptx -A INPUT -p udp -m multiport --dports 5060 -j ACCEPT

## DHCP (why isn't conntrack sufficient?)
ipt6 -A INPUT -p udp --sport 547 --dport 546 -j ACCEPT

## Avahi
ipt4 -A INPUT -p udp --dport 5353 -d 224.0.0.251 -j ACCEPT
ipt6 -A INPUT -p udp --dport 5353 -d ff02::fb -j ACCEPT

## Existing connections
iptx -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

## ==== Reject remaining
## Log
iptx -A INPUT -j IN_LOG

## Reject TCP
iptx -A INPUT -p tcp -j REJECT --reject-with tcp-reset

## Reject UDP
ipt4 -A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
ipt6 -A INPUT -p udp -j REJECT --reject-with icmp6-port-unreachable

## Reject Remaining
ipt4 -A INPUT -j REJECT --reject-with icmp-proto-unreachable
ipt6 -A INPUT -j REJECT

## === IN_LOG
## Log filter
iptx -A IN_LOG -m pkttype ! --pkt-type unicast -j RETURN

## Log
iptx -A IN_LOG -m limit --limit 10/min -j LOG --log-prefix "iptables: Reject IN: " --log-level 7



## === OUTPUT
## ==== Accept canonical
iptx -A OUTPUT -o lo -j ACCEPT
ipt4 -A OUTPUT -p igmp -j ACCEPT
ipt4 -A OUTPUT -p icmp -j ACCEPT
ipt6 -A OUTPUT -p ipv6-icmp -j ACCEPT

## ==== Accept special ports
## TCP (simple)
iptx -A OUTPUT -p tcp -m multiport --dports 22,43,80,443,465,631,873,993,4242,5222,6600,9418,64738 -j ACCEPT

## UDP (simple)
iptx -A OUTPUT -p udp -m multiport --dports 123,6454,60001:60999,64738 -j ACCEPT

## DHCP
ipt4 -A OUTPUT -p udp --sport 68 --dport 67 -j ACCEPT
ipt6 -A OUTPUT -p udp --sport 546 --dport 547 -j ACCEPT

## Avahi
ipt4 -A OUTPUT -p udp --dport 5353 -d 224.0.0.251 -j ACCEPT
ipt6 -A OUTPUT -p udp --dport 5353 -d ff02::fb -j ACCEPT

## TCP and UDP
for p in udp tcp ; do
	## Allow only unbound, who checks DNSSEC records, to do DNS queries
	iptx -A OUTPUT -p $p -m owner --uid-owner $(id -u unbound) --dport 53 -j ACCEPT
done

## Existing connections
iptx -A OUTPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

## Started by "fullnet"
iptx -A OUTPUT -m cgroup --cgroup 0x00420001  -j ACCEPT

## ==== Reject remaining
## Log
iptx -A OUTPUT -j OUT_LOG

## Reject TCP
iptx -A OUTPUT -p tcp -j REJECT --reject-with tcp-reset

## Reject UDP
ipt4 -A OUTPUT -p udp -j REJECT --reject-with icmp-port-unreachable
ipt6 -A OUTPUT -p udp -j REJECT --reject-with icmp6-port-unreachable

## Reject Remaining
ipt4 -A OUTPUT -j REJECT --reject-with icmp-proto-unreachable
ipt6 -A OUTPUT -j REJECT

## === OUT_LOG
## Log
iptx -A OUT_LOG -m limit --limit 10/min -j LOG --log-prefix "iptables: Reject OUT: " --log-level 7


echo "Started"
