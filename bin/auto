#!/bin/bash
## bash is required for arrays


set -e

CMD=()
FILES=()


printUsage() {
	if [ "$#" -ne 0 ] ; then
		echo "$@" >&2
	fi
	echo "Usage: $(basename "$0") [OPTIONS] [--] CMD..." >&2
	echo "" >&2
	echo "  Executes CMD if some files change. \$n placeholders in CMD will be replaced" >&2
	echo "  by the nth FILE." >&2
	echo "" >&2
	echo "OPTIONS" >&2
	echo "  -f FILE  --file FILE   Files or directories to watch" >&2
	echo "  -s       --stop        Stop if CMD fails" >&2
	echo "  -c       --change      Execute CMD only on FILE changes, not with the the start of $(basename "$0")" >&2
	echo "  -b       --bell        Ring the bell in the shell, after each iteration" >&2
	echo "  -e       --error-bell  Ring the bell in the shell, when CMD failed" >&2
	echo "  -C       --clear       Clear screen before each run" >&2
	echo "  -h       --help        Display this message" >&2
	echo "" >&2
	echo "EXAMPLE" >&2
	echo "  The following command executes \"pdflatex 'example.tex'\" imediatly after the start and" >&2
	echo "  everytime the file example.tex or any file withing the images directory has changed." >&2
	echo "  Afterwards it rings the bell." >&2
	echo "    \$ $(basename "$0") -f example.tex -f images/ -b -- pdflatex '\$1'" >&2
	
	test "$#" -eq 0
	exit "$?"
}


template() {
	## ...'... -> ...'"'"'... / ...$123... -> ...'"$123"'...
	TEXT="$(printf '%s' "$1" | sed -e "s#'#'\"'\"'#g;s#\$\([1-9][[:digit:]]*\)#'\"\$\1\"'#g")"
	shift
	printf '%s' "$(eval "printf '%s' '$TEXT'")"
}


## ==== Arguments ==============================================================
## -- Options ------------------------------------------------------------------
STOP=false
CHANGE=false
BELL=false
ERROR_BELL=false
CLEAN=false

while [ "$#" -gt 0 ] ; do
	case "$1" in
		"-f"|"--file")
			FILES+=("$2")
			shift
			shift
		;;
		"-s"|"--stop")
			STOP=true
			shift
		;;
		"-c"|"--change")
			CHANGE=true
			shift
		;;
		"-b"|"--bell")
			BELL=true
			shift
		;;
		"-e"|"--error-bell")
			ERROR_BELL=true
			shift
		;;
		"-C"|"--clear")
			CLEAN=true
			shift
		;;
		"-h"|"--help")
			printUsage
			## EXIT
		;;
		"--")
			shift
			break
		;;
		"-"*)
			printUsage "Unknown argument '$1'"
			## EXIT
		;;
		*)
			break
		;;
	esac
done


## -- Command ------------------------------------------------------------------
while [ "$#" -gt 0 ] ; do
	CMD+=("$(template "$1" "${FILES[@]}")")
	shift
done


## -- Check them ---------------------------------------------------------------
if [ "${#FILES[@]}" = 0 ] ; then
	printUsage "Missing files"
fi

if [ "${#CMD[@]}" = 0 ] ; then
	printUsage "Missing command"
fi


## ==== Wait loop ==============================================================
echo "Using: ${CMD[@]}"

log() {
	printf \
		"\033[5;37;40m%-*s\033[0m\n" \
		$(( $(tput cols) + ${2-0} )) \
		">>> $(date '+%x %X') - $1"
}

while ! $CHANGE || inotifywait \
	--recursive \
	--event modify,delete_self,delete \
	--quiet --quiet \
	"${FILES[@]}"
do
	if $CLEAN ; then
		clear
	else
		echo ""
	fi
	log "starting"
	
	returncode=0
	"${CMD[@]}" || returncode=$?
	
	if [ "$returncode" -eq 0 ] ; then
		log $'\033[1;32m[DONE]\033[0;5;37;40m' 19
		
		if $BELL ; then
			echo -ne "\a"
		fi
	else
		if $BELL || $ERROR_BELL ; then
			echo -ne "\a"
		fi
		
		if $STOP ; then
			exit "$returncode"
		else
			log $'\033[1;31m[FAILED]\033[0;5;37;40m with exit code '"${returncode}" 19
		fi
	fi
	
	CHANGE=true
done
