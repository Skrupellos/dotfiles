#!/bin/bash
## Bash required for truncating variables

set -e


newPreparation() {
	local SRC="$1" ; shift
	local DST="$1" ; shift
	
	## Stop here, if the destination file is on the no-fly list.
	if grep -F --line-regexp "$DST" "$HOME/.dot/not" >/dev/null 2>&1 ; then
		return
	fi
	
	## Execute the passed command if the source and destination files differ
	## (so the backup hard links make sense)
	if ! [[ "$SRC" -ef "$HOME/$DST" ]]; then
		if [ -e "$HOME/$DST" ] ; then
			mkdir -p "$(dirname "$BAK/${DST:1}")"
			cp -lr "$HOME/$DST" "$BAK/${DST:1}"
			rm -r "$HOME/$DST"
		else
			mkdir -p "$(dirname "$HOME/$DST")"
		fi
		
		"$@" "$SRC" "$HOME/$DST"
	fi
}


newCopy() {
	newPreparation "$1" "$2" cp
}


newLink() {
	newPreparation "$1" "$2" ln -fs
}


setGitCfg() {
	if ! git config --global "$1" >/dev/null ; then
		git config --global "$1" "$2"
	fi
}



## Set the pwd to the project root, so we can savely use relative path names
cd "$(dirname "$0")/.."
mkdir -p "$HOME/.dot"
echo "$(pwd)" >"$HOME/.dot/dir"

DOT_FAKE_DASH=i source share/console_setup

## Create backups
BAK="$HOME/.dot/backup/$(date "+%F_%T")"

if [ -d "$HOME/.dot/backup" ] ; then
	cd "$HOME/.dot/backup"
	ls -r | awk "NR>10" | xargs --no-run-if-empty rm -R
	cd "$DOT_DIR"
fi

case "$S_DOMAIN" in
	"cip.ifi.lmu.de")
		rbg_fix="_local"
		;;
esac

## "Copy" dotfiles
find dotfiles -type f -o -type l | while read SRC ; do
	DST=".${SRC:9}"
	newLink "$DOT_DIR/$SRC" "$DST"
done


## ==== Setup programms =======================================================
## -- Console -----------------------------------------------------------------
newLink "$DOT_DIR/share/console_setup" ".profile"         ## interactive & login
newLink "$DOT_DIR/share/console_setup" ".bashrc$rbg_fix"  ## interactive & not login
newLink "$DOT_DIR/share/console_setup" ".zshenv"          ## allways

## -- git ---------------------------------------------------------------------
if type git >/dev/null 2>&1 ; then
	echo git config --global user.name "..."
	echo git config --global user.email "..."
	
	if type kdiff3 >/dev/null 2>&1 ; then
		setGitCfg merge.tool "kdiff3"
	fi
	if type nano >/dev/null 2>&1 ; then
		setGitCfg core.editor "nano -t"
	fi
fi

## -- i3 ----------------------------------------------------------------------
## Test wheather i3 is running and installed by tying to send an empyt command.
if i3-msg >/dev/null 2>&1 ; then
	i3-msg --quiet reload
fi


## -- latexmk -----------------------------------------------------------------
mkdir -p ~/.config/latexmk
echo >~/.config/latexmk/latexmkrc
for prog in \
	zathura \
	okular \
	evince \
	mupdf \
	xpdf \
	acroread
do
	if type "$prog" >/dev/null 2>&1 ; then
		echo "\$pdf_previewer = \"$prog %S\";" >>~/.config/latexmk/latexmkrc
		break
	fi
done


## -- termcap -----------------------------------------------------------------
if type tic >/dev/null 2>&1 ; then
	for f in "$DOT_DIR/share/terminfo/"* ; do
		tic "$f"
	done
fi

## -- dex (autostart) ---------------------------------------------------------
for f in \
	thunderbird \
	org.keepassxc.KeePassXC
do
	SRC="/usr/share/applications/$f.desktop"
	DST=".config/autostart/$f.desktop"
	
	if [ -e "$SRC" ] ; then
		newLink "$SRC" "$DST"
	fi
done
